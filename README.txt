=====================================================
=====================================================
=====================================================

1. Project designation:

This Project is designed to give the opportunity of scrobbling track playbacks 
from MTP-compatible device to lastfm account.

=====================================================

2. Project state

Now project fully implements all functionality of scrobbling, but the process is
a little bit tricky. Cause now I`m not listening music on MTP media player, the 
project unlikely will be maintened and developed any more.

=====================================================

3. Functionality

The project is able to:
1) Extract playcount of all tracks on MTP-device and, after that, reset 
playcount on device to zero.
2) Save playcount into sqlite database (currently this feature is commented out)
or sql-dump (compatible, at least, with sqlite and mysql)
3) Scrobble plays to lastfm using linux lastfmsubmitd programm. Since MTP 
devices don`t save playtime of each track playback, scrobbling timestamps will 
start from specified time / date and will be incremented untill it reaches 
current time.

=====================================================

4. Underlying sytems, platforms and libraries

The part of project, responsible for interacting with MTP-device and generating 
sql-dumps, is writen on C++ with usage of libmtp-library, therefore, it can only
be run on Linux machines. 
Script, which reads playcounts from mysql database and generates lastfmsubmitd 
shell script, is written on php, and, so, can be run on any system with 
installed php.
In order to execute generated shell script, you need linux operating system with
lastfmsubmitd installed and configured.

=====================================================

5. Project submodules

C++-part of the project is located inside the "mtptracks2sqlite" subfolder and 
consist of Netbeans project. Inside "dist/Debug/GNU-Linux-x86/" there are 
comiled executable and an example of sql-dump file, generated by it. 
PHP-part of the project is located under the "mysql2lastfmsubmitd_script" 
subfolder and consist of single php file and an example sh-file, generated by 
it.

=====================================================

6. Scrobbling process flow

Scrobbling process flow contains the following steps:
	a) Connect MTP-device to your system and wait, untill it will be recognized 
	by the system
	b) Run mtptracks2sqlite executable. It will print sql-dump into standart 
	output, so you can use io-redirecting to save it to file, e.g.:

		./mtptracks2sqlite > out.sql

	c) Import sql-file, generated on previous step, into a database. Generally, 
	it can be any dbms, for which that sql-syntax will be appropriate,but as 
	long as the php script uses mysql database to fetch playcounts, it`ll be 
	simplier to use mysql. DDL for the database, into which that sql-dump should
	be imported, is following (for mysql):

		CREATE TABLE IF NOT EXISTS `scrobblings` (
		  `scrobid` int(11) NOT NULL AUTO_INCREMENT,
		  `artist` varchar(50) DEFAULT NULL,
		  `title` varchar(70) DEFAULT NULL,
		  `count` tinyint(4) DEFAULT NULL,
		  `duration` bigint(20) DEFAULT NULL,
		  `album` varchar(35) DEFAULT NULL,
		  PRIMARY KEY (`scrobid`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

	d) Open php-script and set $startTime variable value corresponding to the 
	timestamp, from which you wish to start scrobbling. Also, when running 
	script for the first time, you`ll need to specify database connection 
	parameters in the beginning of the script.
	e) Run php script. Generated shell script will be written into "scrobble.sh"
	file in the same directory and, also, outputed into browser window.
	f) Run generated shell script. It will execute "lastfmsubmit" helper 
	programm, which will populate /var/spool/lastfm directory with files, which 
	will be eaten with lastfmsubmitd daemon and scrobbled to your lastfm 
	account.
 

